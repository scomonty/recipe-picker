{"version":3,"sources":["apis/Call.js","apis/Get.js","actions/index.js","components/Loader.js","components/FoodList.js","components/SearchBar.js","components/QuickIdeas.js","components/Main.js","components/Ingredients.js","components/App.js","reducers/index.js","reducers/foodsReducer.js","reducers/ingredientsReducer.js","reducers/rIdReducer.js","index.js"],"names":["KEY","axios","create","baseURL","concat","params","part","maxResults","key","_fetchFoods","_","memoize","term","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","Call","get","q","sent","type","payload","data","stop","_x","apply","this","arguments","_fetchIngredients","buttonId","_ref2","_callee2","_context2","Get","rId","_x2","getRId","Loader","props","react_default","createElement","className","errorText","defaultProps","message","onlyRunOnce","FoodList","componentDidMount","_this","onButtonTap","e","target","id","_this2","foods","length","count","error","recipes","map","post","recipe_id","image_url","title","source_url","src","alt","react_router_dom","to","onClick","href","rel","renderList","React","Component","connect","state","SearchBar","onInputChange","setState","value","onFormSubmit","preventDefault","onSubmit","searchTitle","onChange","placeholder","placeHolder","QuickIdeas","onQuickIdeasClick","whatWasPressed","innerText","IdeasMenu","items","split","item","Main","components_SearchBar","components_QuickIdeas","components_FoodList","loadLoader","Ingredients","slice","window","scrollTo","componentWillUnmount","recipeIngredients","console","log","components_Loader","entries","ingredients","ingredient","renderTitle","renderRecipe","App","react_router","path","exact","component","combineReducers","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.558a9165.chunk.js","sourcesContent":["import axios from 'axios';\n//const KEY = 'ce74dc883213d736dbd92ae8d48bd050';\nconst KEY = 'cfc9645b64230e279586d2be7e69d80a';\n//const KEY = 'e6aacd46f03b22bbebd031d5924c9767';\n//const KEY ='28189418798bf11ccd3ec635ff404476'\nconst destination = 'https://www.food2fork.com/api/search';\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\n\nexport default axios.create({\n\tbaseURL: `${proxy}${destination}?key=${KEY}`,\n\tparams: {\n\t\tpart: 'snippet',\n\t\tmaxResults: 5,\n\t\tkey: KEY\n\t}\n});\n","import axios from 'axios';\n//const KEY = 'ce74dc883213d736dbd92ae8d48bd050';\nconst KEY = 'cfc9645b64230e279586d2be7e69d80a';\n//const KEY = 'e6aacd46f03b22bbebd031d5924c9767';\n//const KEY = '28189418798bf11ccd3ec635ff404476';\nconst destination = 'https://www.food2fork.com/api/get';\nconst proxy = 'https://cors-anywhere.herokuapp.com/';\n\n\nexport default axios.create({\n\tbaseURL: `${proxy}${destination}?key=${KEY}`,\n\tparams: {\n\t\tpart: 'snippet',\n\t\tmaxResults: 5,\n\t\tkey: KEY\n\t}\n});","import _ from 'lodash';\nimport Call from '../apis/Call';\nimport Get from '../apis/Get';\n\n\nconst fetchFoods = (term) =>\n\t// the redux thunk\n\tasync dispatch => {\n\t\tconst response = await Call.get('', {\n\t\t\tparams: {\n\t\t\t\tq: term\n\t\t\t}\n\t\t});\n\t\tdispatch({\n\t\t\ttype: 'FETCH_FOODS',\n\t\t\tpayload: response.data\n\t\t})\n\t};\n\n// use memoize from lodash to make the api call only once\nexport const _fetchFoods = _.memoize(fetchFoods);\n\nconst fetchIngredients = (buttonId) =>\n\tasync dispatch => {\n\t\tconst response = await Get.get('', {\n\t\t\tparams: {\n\t\t\t\trId: buttonId\n\t\t\t}\n\t\t});\n\t\tdispatch({\n\t\t\ttype: 'FETCH_INGREDIENTS',\n\t\t\tpayload: response.data\n\t\t})\n\t}\n\nexport const _fetchIngredients = _.memoize(fetchIngredients);\n\n\n\nexport const getRId = (buttonId) =>\n\tdispatch => {\n\t\tconst response = buttonId\n\t\tdispatch({\n\t\t\ttype: 'FETCH_RID',\n\t\t\tpayload: response\n\t\t})\n\t}","import '../styles/loader.css';\nimport React from 'react';\n\nconst Loader = (props) => {\n    return <div className=\"ui loadScreen\">\n  <div className=\"ui active dimmer\">\n    <div className=\"ui text loader\">{props.errorText}</div>\n  </div>\n  <p></p>\n</div>\n}\n\nLoader.defaultProps = {\n\tmessage: 'Loading...'\n}\n\nexport default Loader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { _fetchFoods } from '../actions';\nimport { getRId } from '../actions';\nimport Loader from './Loader';\nimport '../styles/InfoButton.css';\nimport '../styles/grid.css';\n\nlet onlyRunOnce = 0;\n\nclass FoodList extends React.Component {\n\n    componentDidMount = () => {\n        if(!onlyRunOnce) {\n            this.props._fetchFoods('tacos');\n            onlyRunOnce ++;\n        }\n    }\n\n    onButtonTap = (e) => {\n       this.props.getRId(e.target.id);\n    }\n\n    renderList() {\n        // create helper function and map to bild list\n       if (this.props.foods.length !== 0 ) {\n           if(this.props.foods.count === 0 ) {\n               return <div className=\"noresults\"><h2>No results found.  Try another search term.</h2></div>\n           }\n           if(this.props.foods.error) {\n            return <div><h2 className=\"maxSubmit\">sorry, you have reached your daily limit of submissions</h2></div>\n           }\n        return this.props.foods.recipes.map(post => {\n            const { recipe_id, image_url, title, source_url } = post\n             return (\n                <div className=\"col-ld-3 col-md-6 col-dd-4 center\" key={recipe_id}>\n                <div className=\"image-container\">\n              <img className=\"InfoImg\" src={image_url} alt={title}/>\n              </div>\n              <h2 className=\"ItemTitle\">{title}</h2>\n              <div className=\"ui buttons\">\n              <Link to=\"/components/Ingredients\" id={recipe_id} onClick={this.onButtonTap} className=\"ui button\">Get Receipe<span className=\"hidden\">{recipe_id}</span></Link>\n              <div className=\"or\"></div>\n              <a className=\"ui positive button\" href={source_url} target=\"_blank\" rel=\"noopener noreferrer\">See More Info</a>\n            </div>\n              </div>\n              )\n         })\n    }\n    }\n\n    render() {\n        return (\n            <div className=\"container row twelve\">{this.renderList()}</div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { foods: state.foods, rId: state.rId  }\n}\n\n\nexport default connect(mapStateToProps, { _fetchFoods, getRId })(FoodList);\n","import '../styles/SearchBar.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { _fetchFoods } from '../actions';\n\nclass SearchBar extends React.Component{\n\tstate={term: ''};\n\n\tonInputChange = (e) => {\n\t\t\tthis.setState({ term: e.target.value });\n\t};\n\n\tonFormSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props._fetchFoods(this.state.term);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t\t<div className=\"search-bar ui segment\" id=\"search\">\n\t\t\t\t\t<form onSubmit={this.onFormSubmit} className=\"ui form\">\n\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t<label><h1>{this.props.searchTitle}</h1></label>\n\t\t\t\t\t<input className=\"searchInput\" type=\"text\" value={this.state.term} onChange={this.onInputChange} placeholder={this.props.placeHolder}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"bottomWave\"></div>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    return { foods: state.foods }\n}\n\n\nexport default connect(mapStateToProps, { _fetchFoods })(SearchBar);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { _fetchFoods } from '../actions';\nimport '../styles/QuickIdeas.css';\n\n\n\nclass QuickIdeas extends React.Component {\n\n\n  onQuickIdeasClick = async (e) => {\n    const whatWasPressed = e.target.innerText;\n    this.props._fetchFoods(whatWasPressed);\n}\n\nrender() {\n    const itemsToArray = this.props.items.split(', ');\n    const  IdeasMenu = itemsToArray.map( (item) => {\n       return <button onClick={this.onQuickIdeasClick} className=\"ui basic button QIButton\" key={item}>{item}</button>\n      });\n      return <div>{IdeasMenu}</div>\n}\n}\n\n\nconst mapStateToProps = (state) => {\n  return { foods: state.foods }\n}\n\n\nexport default connect(mapStateToProps, { _fetchFoods })(QuickIdeas);","import React from 'react';\nimport FoodList from './FoodList';\nimport SearchBar from './SearchBar';\nimport QuickIdeas from './QuickIdeas';\n\n\nconst Main = () => {\n    return (\n      <div className=\"App\">\n    <SearchBar onFormSubmit='tacos' searchTitle=\"What's For Dinner\" placeHolder='tacos' />\n    <div className=\"QuickIdeas\">\n      <h2 className=\"IdeasHeader\">Quick Ideas</h2>\n    <QuickIdeas items=\"hamburgers, tacos, spaghetti, milkshakes\"/>\n    <div className=\"bottom-cap\"></div>\n      <div className=\"bottom-trim\"></div>\n      </div>\n    <FoodList />\n      </div>\n    );\n  }\n  \n  export default Main;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { _fetchIngredients } from '../actions';\nimport { getRId } from '../actions';\nimport Loader from './Loader';\n\nlet loadLoader = true;\n\n\nclass Ingredients extends React.Component{\n\n    componentDidMount = () => {\n        this.props._fetchIngredients(this.props.rId.slice(-1)[0]);\n        window.scrollTo(0, 0);\n    }\n\n    componentWillUnmount = () => {\n        loadLoader = true;\n    }\n\n    renderRecipe() {\n        // create helper function and map to bild list\n\n        if(loadLoader) {\n\n        }\n       if (this.props.recipeIngredients.length === 0 ) { \n           console.log('still fetching');\n           return <Loader errorText=\"Getting Ingredients\" />;\n        }\n        const lastInArray = (Object.entries(this.props.recipeIngredients.slice(-1)[0]));\n            return lastInArray.map(post => {   \n                return post[1].ingredients.map(ingredient => {\n                    return (\n                         <h3 key={ingredient}>{ingredient}</h3>\n                    )\n                })\n            })\n        }   \n\n\n    renderTitle() {\n        // create helper function and map to bild list\n        if(loadLoader) {\n            loadLoader = false;\n            return <Loader errorText=\"Getting Ingredients\" />;\n        }\n       if (this.props.recipeIngredients.length !== 0 ) {\n            const lastInArray = (Object.entries(this.props.recipeIngredients.slice(-1)[0]));\n            return lastInArray.map(post => {   \n                    return (\n                        <div key={post[1].title}>\n                            <h2>{post[1].title}</h2>\n                            <img src={post[1].image_url} alt={post[1].title}></img>\n                        </div>\n                    )\n                })\n            }\n        }   \n\n    render() {\n        return ( \n            <div id=\"ingredientsPage\">\n                <div className=\"search-bar ui segment ingredientsBanner\" id=\"search\"> \n                    <h1 className=\"ItemTitle\">Whats For Dinner</h1>\n                    <div className=\"bottomWave\"></div>\n                </div>\n                <div className=\"QuickIdeas\">\n                    <Link to=\"/recipe-picker/\" className=\"ui button home\">back to home</Link>\n                    <div className=\"bottom-cap\"></div>\n                    <div className=\"bottom-trim\"></div>\n                </div>\n                <div className=\"col-ld-3 col-md-6 col-dd-4 center\">\n                    <div>{this.renderTitle()}</div>\n                    <div>{this.renderRecipe()}</div>    \n                </div>\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return { recipeIngredients: state.ingredients, rId: state.rId }\n}\n\nexport default connect(mapStateToProps, { _fetchIngredients, getRId })(Ingredients);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Main from './Main';\nimport Ingredients from './Ingredients';\n\nconst App = () => {\n  return (\n    <div>\n            <BrowserRouter>\n            <Route path=\"/\" exact component={Main} />\n            <Route path='/components/Ingredients' exact component={Ingredients} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n\tcombineReducers\n} from 'redux';\nimport foodsReducer from './foodsReducer';\nimport ingredientsReducer from './ingredientsReducer';\nimport rIdReducer from './rIdReducer';\n\n\nexport default combineReducers({\n\tfoods: foodsReducer,\n\tingredients: ingredientsReducer,\n\trId: rIdReducer\n})\n\n/*\nexport default combineReducers({\n\t//dummy reducer to trick redux and remove error when first starting to build project\n\tdummy: () => 0\n});\n*/","export default (state = [], action) => {\n\t// must return any vaule besides 'undefined' or will throw error\nif (action.type === 'FETCH_FOODS') {\n\treturn action.payload;\n}\nreturn state;\n\n//switch statement\n//switch(action.type) {\n\t//case 'FETCH_POSTS':\n\t//return action.payload;\n\t//case 'lorem_ipsum':\n\t//return action.payload;\n\t//default:\n\t//return state;\n//}\n}\n","export default (state = [], action) => {\n\tif (action.type === 'FETCH_INGREDIENTS') {\n\treturn [...state, action.payload];\n}\nreturn state;\n}\n","export default (state = [ \"54504\" ], action) => {\n\tif (action.type === 'FETCH_RID') {\n\treturn [...state, action.payload];\n}\nreturn state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n//add applyMiddleware when importing middleware such as thunk\nimport { createStore, applyMiddleware } from 'redux';\nimport './index.css';\nimport App from './components/App';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\n//hook up middleware to redux store\nconst store = createStore(reducers,applyMiddleware(thunk));\n\nReactDOM.render(\n\t<Provider store={store}>\n\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\n"],"sourceRoot":""}